<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.latte.menu.repository.MenuMapper">

    <select id="findBrandRankingList" resultType="BrandRankingResponse">
        SELECT RANKING.MENU_NO, RANKING.MENU_NAME, RANKING.BRAND, RANKING.CAFFEINE, RANKING.IMAGE_URL
        FROM (
            SELECT MENU.MENU_NO, MENU_NAME, BRAND, CAFFEINE, IMAGE_URL
            FROM MENU
            LEFT OUTER JOIN DRINK
                ON MENU.MENU_NO = DRINK.MENU_NO
            WHERE BRAND = #{brand}
            GROUP BY MENU.MENU_NO, MENU_NAME, BRAND, CAFFEINE, IMAGE_URL
            ORDER BY COUNT(DRINK.MENU_NO) DESC
            LIMIT 10
        ) AS RANKING
        ORDER BY
        <choose>
            <when test="sortBy == 'caffeine-desc'">
                CAST(SUBSTRING(RANKING.CAFFEINE, 1, LOCATE('mg', RANKING.CAFFEINE) - 1) AS UNSIGNED) DESC
            </when>
            <when test="sortBy == 'caffeine-asc'">
                CAST(SUBSTRING(RANKING.CAFFEINE, 1, LOCATE('mg', RANKING.CAFFEINE) - 1) AS UNSIGNED) ASC
            </when>
            <when test="sortBy == 'popularity'">
                COUNT(RANKING.MENU_NO) DESC
            </when>
        </choose>
    </select>


    <select id="findBrandCategoryList" resultType="BrandCategoryResponse">
        SELECT MENU_NO, MENU_NAME, CAFFEINE, PRICE, IMAGE_URL
        FROM MENU
        <where>
            <if test="brand != null and brand != ''">
                and BRAND = #{brand}
            </if>
            <if test="cond == 'caffeine-none'">
                and CAFFEINE = "0mg"
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="sortBy == 'caffeine-desc'">
                CAST(SUBSTRING(CAFFEINE, 1, LOCATE('mg', CAFFEINE) - 1) AS UNSIGNED) DESC
            </when>
            <when test="sortBy == 'caffeine-asc'">
                CAST(SUBSTRING(CAFFEINE, 1, LOCATE('mg', CAFFEINE) - 1) AS UNSIGNED) ASC
            </when>
            <otherwise>
                MENU_NAME ASC
            </otherwise>
        </choose>
        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
    </select>

    <select id="getBrandCategoryCnt" resultType="int">
        SELECT COUNT(*) AS CNT
        FROM MENU
        <where>
            <if test="brand != null and brand != ''">
                and BRAND = #{brand}
            </if>
            <if test="cond == 'caffeine-none'">
                and CAFFEINE = "0mg"
            </if>
        </where>
    </select>

    <!-- 음료 검색 시, 가장 작은 사이즈를 기준으로 검색 -->
    <select id="findMenuList" resultType="MenuSearchResponse">
        SELECT
            M1.menu_no,
            M1.menu_name,
            M1.brand,
            M1.caffeine,
            M1.price,
            M1.image_url
        FROM menu M1
        <!-- 용량이 가장 작은 음료들을 검색 -->
        INNER JOIN (
            SELECT
                menu_name,
                brand,
                MIN(CAST(SUBSTRING_INDEX(volumn, 'oz(', 1) AS DECIMAL(5,2))) AS min_size
            FROM menu
            GROUP BY menu_name, brand
        ) AS M2
            ON M1.menu_name = M2.menu_name
                AND M1.brand = M2.brand
                AND CAST(SUBSTRING_INDEX(M1.volumn, 'oz(', 1) AS DECIMAL(5,2)) = M2.min_size
        <where>
            <if test="cond == 'caffeine-none'">
                and M1.CAFFEINE = "0mg"
            </if>
            <!-- 검색어 -->
            <if test="word != null and word != ''">
                and M1.MENU_NAME LIKE CONCAT('%', TRIM(#{word}), '%')
                or M1.MENU_NAME LIKE CONCAT('%', REPLACE(TRIM(#{word}), ' ', ''), '%')
                or REPLACE(M1.MENU_NAME, ' ', '') LIKE CONCAT('%', TRIM(#{word}), '%')
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="sortBy == 'caffeine-desc'">
                CAST(SUBSTRING(M1.CAFFEINE, 1, LOCATE('mg', M1.CAFFEINE) - 1) AS UNSIGNED) DESC,
            </when>
            <when test="sortBy == 'caffeine-asc'">
                CAST(SUBSTRING(M1.CAFFEINE, 1, LOCATE('mg', M1.CAFFEINE) - 1) AS UNSIGNED) ASC,
            </when>
        </choose>
        <!-- 검색어에 따라 정렬 -->
        <if test="word != null and word != ''">
            CASE
                WHEN M1.MENU_NAME LIKE CONCAT('%', TRIM(#{word}), '%') THEN 1
                WHEN M1.MENU_NAME LIKE CONCAT('%', REPLACE(TRIM(#{word}), ' ', ''), '%') THEN 2
                WHEN REPLACE(M1.MENU_NAME, ' ', '') LIKE CONCAT('%', TRIM(#{word}), '%') THEN 3
                ELSE 4
            END,
        </if>
        <!-- 브랜드 정렬 기준 -->
        CASE M1.BRAND
            WHEN '스타벅스' THEN 1
            WHEN '투썸플레이스' THEN 2
            WHEN '컴포즈' THEN 3
            WHEN '이디야' THEN 4
            WHEN '빽다방' THEN 5
            ELSE 6
        END,
        M1.MENU_NAME ASC  <!-- HOT, ICE 정렬 -->
        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
    </select>

    <select id="getFindMenuListCnt" resultType="int">
        SELECT COUNT(*) AS CNT
        FROM MENU
        <where>
            <if test="cond == 'caffeine-none'">
                and CAFFEINE = "0mg"
            </if>
            <if test="word != null and word != ''">
                and MENU_NAME like concat('%', #{word}, '%')
            </if>
        </where>
    </select>


    <select id="compare" resultType="MenuCompareResponse">
        SELECT MENU_NO, BRAND, MENU_NAME, CAFFEINE, PRICE, ALLERGY, KCAL, IMAGE_URL
        FROM MENU
        <where>
            <if test="menu1 != null">
                or MENU_NO = #{menu1}
            </if>
            <if test="menu2 != null">
                or MENU_NO = #{menu2}
            </if>
        </where>
    </select>

    <select id="getRecentMenu" parameterType="java.util.ArrayList" resultType="MenuSimpleResponse">
        SELECT MENU_NO, MENU_NAME, IMAGE_URL
        FROM MENU
        WHERE MENU_NO IN (
        <foreach item="no" collection="menus" index="index" separator=",">
            #{no}
        </foreach>
        )
    </select>

    <!-- 메뉴 상세 데이터 -->
    <resultMap id="menuDetailResultMap" type="MenuDetailResponse">
        <id property="menuNo" column="menu_no"/>
        <result property="brand" column="brand"/>
        <result property="menuName" column="menu_name"/>
        <result property="caffeine" column="caffeine"/>
        <result property="price" column="price"/>
        <result property="imageUrl" column="image_url"/>
        <!-- 영양 성분 -->
        <association property="nutrient" javaType="com.latte.menu.response.MenuDetailResponse$Nutrient">
            <result property="kcal" column="kcal"/>
            <result property="sugar" column="sugar"/>
            <result property="salt" column="salt"/>
            <result property="protein" column="protein"/>
            <result property="satFat" column="sat_fat"/>
        </association>
    </resultMap>


    <select id="getMenuDetail" resultMap="menuDetailResultMap">
        SELECT MENU_NO, BRAND, MENU_NAME, CAFFEINE, PRICE, KCAL, SUGAR, SALT, PROTEIN, SAT_FAT, IMAGE_URL
        FROM MENU
        WHERE MENU_NO = #{no}
    </select>

    <select id="getLowCaffeineMenu" resultType="MenuSimpleResponse">
        SELECT MENU_NO, MENU_NAME, IMAGE_URL
        FROM MENU
        <where>
            <if test="base != 0">
                and CAST(SUBSTRING(CAFFEINE, 1, LOCATE('mg', CAFFEINE) - 1) AS UNSIGNED) &lt; #{base}
            </if>
            <if test="base == 0">
                and CAFFEINE = '0mg'
            </if>
        </where>
        ORDER BY RAND()
        LIMIT 4
    </select>

</mapper>